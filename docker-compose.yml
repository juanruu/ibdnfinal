version: "3.9"

services:
  mongoibdn:
    image: mongoibdn
    container_name: mongotainer
    build:
      context: .
      dockerfile: mongodocker/Dockerfile
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data
    networks:
      - app-tier

  kafkaibdn:
    image: kafkaibdn
    container_name: kafkaibdn
    build:
      context: .
      dockerfile: kafkadocker/Dockerfile
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafkaibdn:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafkaibdn:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghiklmnopqrstuvwxyz123456
    networks:
      - app-tier

  spark-master:
    image: bitnami/spark:3.5.3
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8082:8080"
    depends_on:
      - kafkaibdn
      - mongoibdn
    volumes:
      - ./flight_prediction/target/scala-2.12:/home
      - ./models:/practica_creativa/models
    networks:
      - app-tier


  spark-worker-1:
    image: bitnami/spark:3.5.3
    container_name: spark-worker-1
    hostname: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - kafkaibdn
      - mongoibdn
      - spark-master
    volumes:
      - ./flight_prediction/target/scala-2.12:/home
      - ./models:/practica_creativa/models
    ports:
      - "8081:8081"
    networks:
      - app-tier

  spark-worker-2:
    image: bitnami/spark:3.5.3
    container_name: spark-worker-2
    hostname: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - kafkaibdn
      - mongoibdn
      - spark-master
    volumes:
      - ./flight_prediction/target/scala-2.12:/home
      - ./models:/practica_creativa/models
    ports:
      - "8083:8081"
    networks:
      - app-tier

  spark-submit-client:
    image: bitnami/spark:3.5.3
    container_name: spark-submit-client
    hostname: spark-submit-client
    environment:
      - SPARK_MODE_URL=spark://spark-master:7077
      - PYSPARK_DRIVER_PYTHON=python3
      - PYSPARK_PYTHON=python3
      - MONGO_SPARK_URI=mongodb://mongotainer:27017
      - KAFKA_BROKERS=kafkaibdn:9092
      - SPARK_MASTER_UI_URI=http://spark-master:8082
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
      - kafkaibdn
      - mongoibdn
    networks:
      - app-tier
    volumes:
      - ./flight_prediction/target/scala-2.12:/home
      - ./models:/practica_creativa/models
    command: >
      sh -c "sleep 20 &&
      spark-submit
      --packages org.mongodb.spark:mongo-spark-connector_2.12:10.4.1,org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.3
      --class es.upm.dit.ging.predictor.MakePrediction
      /home/flight_prediction_2.12-0.1.jar"

  flaskibdn:
    image: flaskibdn
    container_name: flaskibdn
    build:
      context: .
      dockerfile: flaskdocker/Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - kafkaibdn
      - mongoibdn
    volumes:
      - ./models:/app/models
    environment:
      - PROJECT_HOME=app
    networks:
      - app-tier
  
  nifi:
    image: apache/nifi:1.25.0
    container_name: nifi
    ports:
      - "8443:8443"
      - "5050:5050"
    volumes:
      - ./nifi_output:/tmp/nifi_output
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=098765432100
    networks:
      - app-tier

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - "9870:9870"
    environment:
      - CLUSTER_NAME=test
      - HDFS_CONF_dfs_permissions_enabled=false
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - CORE_CONF_fs_defaults=hdfs://namenode:8020
    volumes:
      - namenode:/hadoop/dfs/name
    networks:
      - app-tier
    

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    ports:
      - "9864:9864"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - HDFS_CONF_dfs_webhdfs_enabled=true
    volumes:
      - datanode:/hadoop/dfs/data
    networks:
      - app-tier


volumes:
  namenode:
  datanode: 
  
networks:
  app-tier:
    driver: bridge


